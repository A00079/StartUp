{"version":3,"sources":["init-fcm.js","rest/UserREST.js","App.js","register-sw.js","index.js"],"names":["messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","usePublicVapidKey","getUserData","postUserdetails","urls","data","url","this","requestPostCall","process","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","renderNotification","notification","i","key","compose","withState","withHandlers","pushNotification","setNotifications","notifications","newNotification","concat","lifecycle","componentDidMount","props","setToken","requestPermission","a","getToken","token","console","log","map","navigator","serviceWorker","register","registration","scope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAcMA,G,MAXyBC,gBAAuB,CACpDC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGwBT,aAEzCA,EAAUU,kBACR,2F,WCSaC,EAxBK,CAElBC,gBAFkB,SAEFC,EAAKC,GACnB,IAAMC,EAAMF,EACZ,OAAOG,KAAKC,gBANAC,oCAM0BH,EAAID,IAE5CG,gBANkB,SAMFF,EAAID,GAClB,OAAOK,MAAMJ,EAAK,CAChBK,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMC,KAAKC,UAAUV,KAEpBW,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBC,OAAM,SAAAC,GACL,OAAOA,OCfTC,G,MAAqB,SAACC,EAAcC,GAAf,OAAqB,wBAAIC,IAAKD,GAAID,KAe9CG,cACbC,YAAU,QAAS,WAAY,IAC/BA,YAAU,gBAAiB,mBAAoB,IAC/CC,YAAa,CACXC,iBAAkB,gBAChBC,EADgB,EAChBA,iBACAC,EAFgB,EAEhBA,cAFgB,OAGZ,SAAAC,GAAe,OACjBF,EAAiBC,EAAcE,OAAOD,QAE5CE,YAAU,CACFC,kBADE,WACmB,IAAD,4HACe,EAAKC,MADpB,EAChBP,iBAAkBQ,EADF,EACEA,SAE1B7C,EACG8C,oBACArB,KAFH,sBAEQ,8BAAAsB,EAAA,sEACgB/C,EAAUgD,WAD1B,OACEC,EADF,OAEEnC,EAAO,CACXmC,SAEY,sBACdtC,EACGC,gBAFW,sBAEcE,GACzBW,MAAK,SAAAC,GACJwB,QAAQC,IAAI,mBAAoBzB,MAEpCmB,EAASI,GAXL,4CAaLrB,OAAM,SAAUC,GACfqB,QAAQC,IAAI,sCAAuCtB,MAnB/B,gDAXfK,EAbH,SAAC,GAAD,IAAGe,EAAH,EAAGA,MAAOV,EAAV,EAAUA,cAAV,OACV,oCACE,qFACA,kDACoB,2BAAIU,IAExB,kDAEGV,EAAca,IAAItB,QCfnB,kBAAmBuB,WACrBA,UAAUC,cACPC,SAAS,8BACT9B,MAAK,SAAS+B,GACbN,QAAQC,IAAI,qCAAsCK,EAAaC,UAEhE7B,OAAM,SAASC,GACdqB,QAAQC,IAAI,6CAA8CtB,MCAlE6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d1a92a5f.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n\nconst initializedFirebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyD-qHxuBR9FcFOe3TRKMezxPcKhvO-9PGI\",\n  authDomain: \"vuefiretest-c6e3b.firebaseapp.com\",\n  databaseURL: \"https://vuefiretest-c6e3b.firebaseio.com\",\n  projectId: \"vuefiretest-c6e3b\",\n  storageBucket: \"vuefiretest-c6e3b.appspot.com\",\n  messagingSenderId: \"101818530234\",\n  appId: \"1:101818530234:web:21b6469ad9466113898583\",\n  measurementId: \"G-H311ERVSFJ\"\n});\n\nconst messaging = initializedFirebaseApp.messaging();\n\nmessaging.usePublicVapidKey(\n  \"BC4RdoebnlaLgJQ1hnHOyRNcUj0w38wLENfJDmWf-h_8EBz7Pc9wLMH5wEM9AchMRgZBbNcYsxG_1bC17IiB9_g\"\n);\n\nexport { messaging };\n","const baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst getUserData = {\r\n\r\n  postUserdetails(urls,data) {\r\n    const url = urls;\r\n    return this.requestPostCall(baseUrl + url,data);\r\n  },\r\n  requestPostCall(url,data) {\r\n    return fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .catch(err => {\r\n        return err;\r\n      });\r\n  }\r\n};\r\n\r\nexport default getUserData;\r\n\r\n\r\n","import React from \"react\";\nimport { messaging } from \"./init-fcm\";\nimport { compose, lifecycle, withHandlers, withState } from \"recompose\";\nimport getUserData from \"../src/rest/UserREST\";\nimport axios from 'axios';\n\nconst renderNotification = (notification, i) => <li key={i}>{notification}</li>;\n\nconst App = ({ token, notifications }) => (\n  <>\n    <h1>React + Firebase Cloud Messaging (Push Notifications)</h1>\n    <div>\n      Current token is: <p>{token}</p>\n    </div>\n    <ul>\n      Notifications List:\n      {notifications.map(renderNotification)}\n    </ul>\n  </>\n);\n\nexport default compose(\n  withState(\"token\", \"setToken\", \"\"),\n  withState(\"notifications\", \"setNotifications\", []),\n  withHandlers({\n    pushNotification: ({\n      setNotifications,\n      notifications\n    }) => newNotification =>\n        setNotifications(notifications.concat(newNotification))\n  }),\n  lifecycle({\n    async componentDidMount() {\n      const { pushNotification, setToken } = this.props;\n\n      messaging\n        .requestPermission()\n        .then(async function () {\n          const token = await messaging.getToken();\n          const data = {\n            token\n          }\n          let api_url = \"api/users/subscribe\";\n          getUserData\n            .postUserdetails(api_url, data)\n            .then(response => {\n              console.log(\"Response Data...\", response);\n            });\n          setToken(token);\n        })\n        .catch(function (err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n    }\n  })\n)(App);","const registerServiceWorker = () => {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .register(\"./firebase-messaging-sw.js\")\n      .then(function(registration) {\n        console.log(\"Registration successful, scope is:\", registration.scope);\n      })\n      .catch(function(err) {\n        console.log(\"Service worker registration failed, error:\", err);\n      });\n  }\n};\n\nexport { registerServiceWorker };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { registerServiceWorker } from \"./register-sw\";\n\nregisterServiceWorker();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}